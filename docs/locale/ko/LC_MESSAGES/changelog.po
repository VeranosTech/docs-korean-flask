# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets Team
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 1.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-12-24 16:20+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../../CHANGES.rst:4
msgid "Flask Changelog"
msgstr ""

#: ../../../CHANGES.rst:8
msgid "Version 1.1"
msgstr ""

#: ../../../CHANGES.rst:10 ../../../CHANGES.rst:26
msgid "Unreleased"
msgstr ""

#: ../../../CHANGES.rst:12
msgid ""
":meth:`flask.RequestContext.copy` includes the current session object in "
"the request context copy. This prevents ``flask.session`` pointing to an "
"out-of-date object. (`#2935`)"
msgstr ""

#: ../../../CHANGES.rst:15
msgid ""
"Using built-in RequestContext, unprintable Unicode characters in Host "
"header will result in a HTTP 400 response and not HTTP 500 as previously."
" (`#2994`)"
msgstr ""

#: ../../../CHANGES.rst:24
msgid "Version 1.0.3"
msgstr ""

#: ../../../CHANGES.rst:28
msgid ""
":func:`send_file` encodes filenames as ASCII instead of Latin-1 "
"(ISO-8859-1). This fixes compatibility with Gunicorn, which is stricter "
"about header encodings than PEP 3333. (`#2766`_)"
msgstr ""

#: ../../../CHANGES.rst:31
msgid ""
"Allow custom CLIs using ``FlaskGroup`` to set the debug flag without it "
"always being overwritten based on environment variables. (`#2765`_)"
msgstr ""

#: ../../../CHANGES.rst:39
msgid "Version 1.0.2"
msgstr ""

#: ../../../CHANGES.rst:41
msgid "Released on May 2nd 2018"
msgstr ""

#: ../../../CHANGES.rst:43
msgid ""
"Fix more backwards compatibility issues with merging slashes between a "
"blueprint prefix and route. (`#2748`_)"
msgstr ""

#: ../../../CHANGES.rst:45
msgid ""
"Fix error with ``flask routes`` command when there are no routes. "
"(`#2751`_)"
msgstr ""

#: ../../../CHANGES.rst:53
msgid "Version 1.0.1"
msgstr ""

#: ../../../CHANGES.rst:55
msgid "Released on April 29th 2018"
msgstr ""

#: ../../../CHANGES.rst:57
msgid ""
"Fix registering partials (with no ``__name__``) as view functions. "
"(`#2730`_)"
msgstr ""

#: ../../../CHANGES.rst:59
msgid ""
"Don't treat lists returned from view functions the same as tuples. Only "
"tuples are interpreted as response data. (`#2736`_)"
msgstr ""

#: ../../../CHANGES.rst:61
msgid ""
"Extra slashes between a blueprint's ``url_prefix`` and a route URL are "
"merged. This fixes some backwards compatibility issues with the change in"
" 1.0. (`#2731`_, `#2742`_)"
msgstr ""

#: ../../../CHANGES.rst:64
msgid ""
"Only trap ``BadRequestKeyError`` errors in debug mode, not all "
"``BadRequest`` errors. This allows ``abort(400)`` to continue working as "
"expected. (`#2735`_)"
msgstr ""

#: ../../../CHANGES.rst:67
msgid ""
"The ``FLASK_SKIP_DOTENV`` environment variable can be set to ``1`` to "
"skip automatically loading dotenv files. (`#2722`_)"
msgstr ""

#: ../../../CHANGES.rst:79
msgid "Version 1.0"
msgstr ""

#: ../../../CHANGES.rst:81 ../../../CHANGES.rst:302
msgid "Released on April 26th 2018"
msgstr ""

#: ../../../CHANGES.rst:83
msgid "**Python 2.6 and 3.3 are no longer supported.** (`pallets/meta#24`_)"
msgstr ""

#: ../../../CHANGES.rst:84
msgid ""
"Bump minimum dependency versions to the latest stable versions: Werkzeug "
">= 0.14, Jinja >= 2.10, itsdangerous >= 0.24, Click >= 5.1. (`#2586`_)"
msgstr ""

#: ../../../CHANGES.rst:87
msgid ""
"Skip :meth:`app.run <Flask.run>` when a Flask application is run from the"
" command line. This avoids some behavior that was confusing to debug."
msgstr ""

#: ../../../CHANGES.rst:90
msgid ""
"Change the default for :data:`JSONIFY_PRETTYPRINT_REGULAR` to ``False``. "
":func:`~json.jsonify` returns a compact format by default, and an "
"indented format in debug mode. (`#2193`_)"
msgstr ""

#: ../../../CHANGES.rst:93
msgid ""
":meth:`Flask.__init__ <Flask>` accepts the ``host_matching`` argument and"
" sets it on :attr:`~Flask.url_map`. (`#1559`_)"
msgstr ""

#: ../../../CHANGES.rst:95
msgid ""
":meth:`Flask.__init__ <Flask>` accepts the ``static_host`` argument and "
"passes it as the ``host`` argument when defining the static route. "
"(`#1559`_)"
msgstr ""

#: ../../../CHANGES.rst:98
msgid ":func:`send_file` supports Unicode in ``attachment_filename``. (`#2223`_)"
msgstr ""

#: ../../../CHANGES.rst:100
msgid ""
"Pass ``_scheme`` argument from :func:`url_for` to "
":meth:`~Flask.handle_url_build_error`. (`#2017`_)"
msgstr ""

#: ../../../CHANGES.rst:102
msgid ""
":meth:`~Flask.add_url_rule` accepts the ``provide_automatic_options`` "
"argument to disable adding the ``OPTIONS`` method. (`#1489`_)"
msgstr ""

#: ../../../CHANGES.rst:105
msgid ""
":class:`~views.MethodView` subclasses inherit method handlers from base "
"classes. (`#1936`_)"
msgstr ""

#: ../../../CHANGES.rst:107
msgid ""
"Errors caused while opening the session at the beginning of the request "
"are handled by the app's error handlers. (`#2254`_)"
msgstr ""

#: ../../../CHANGES.rst:109
msgid ""
"Blueprints gained :attr:`~Blueprint.json_encoder` and "
":attr:`~Blueprint.json_decoder` attributes to override the app's encoder "
"and decoder. (`#1898`_)"
msgstr ""

#: ../../../CHANGES.rst:112
msgid ""
":meth:`Flask.make_response` raises ``TypeError`` instead of "
"``ValueError`` for bad response types. The error messages have been "
"improved to describe why the type is invalid. (`#2256`_)"
msgstr ""

#: ../../../CHANGES.rst:115
msgid ""
"Add ``routes`` CLI command to output routes registered on the "
"application. (`#2259`_)"
msgstr ""

#: ../../../CHANGES.rst:117
msgid ""
"Show warning when session cookie domain is a bare hostname or an IP "
"address, as these may not behave properly in some browsers, such as "
"Chrome. (`#2282`_)"
msgstr ""

#: ../../../CHANGES.rst:120
msgid "Allow IP address as exact session cookie domain. (`#2282`_)"
msgstr ""

#: ../../../CHANGES.rst:121
msgid ""
"``SESSION_COOKIE_DOMAIN`` is set if it is detected through "
"``SERVER_NAME``. (`#2282`_)"
msgstr ""

#: ../../../CHANGES.rst:123
msgid ""
"Auto-detect zero-argument app factory called ``create_app`` or "
"``make_app`` from ``FLASK_APP``. (`#2297`_)"
msgstr ""

#: ../../../CHANGES.rst:125
msgid ""
"Factory functions are not required to take a ``script_info`` parameter to"
" work with the ``flask`` command. If they take a single parameter or a "
"parameter named ``script_info``, the :class:`~cli.ScriptInfo` object will"
" be passed. (`#2319`_)"
msgstr ""

#: ../../../CHANGES.rst:129
msgid ""
"``FLASK_APP`` can be set to an app factory, with arguments if needed, for"
" example ``FLASK_APP=myproject.app:create_app('dev')``. (`#2326`_)"
msgstr ""

#: ../../../CHANGES.rst:132
msgid ""
"``FLASK_APP`` can point to local packages that are not installed in "
"editable mode, although ``pip install -e`` is still preferred. (`#2414`_)"
msgstr ""

#: ../../../CHANGES.rst:135
msgid ""
"The :class:`~views.View` class attribute "
":attr:`~views.View.provide_automatic_options` is set in "
":meth:`~views.View.as_view`, to be detected by "
":meth:`~Flask.add_url_rule`. (`#2316`_)"
msgstr ""

#: ../../../CHANGES.rst:139
msgid ""
"Error handling will try handlers registered for ``blueprint, code``, "
"``app, code``, ``blueprint, exception``, ``app, exception``. (`#2314`_)"
msgstr ""

#: ../../../CHANGES.rst:142
msgid ""
"``Cookie`` is added to the response's ``Vary`` header if the session is "
"accessed at all during the request (and not deleted). (`#2288`_)"
msgstr ""

#: ../../../CHANGES.rst:144
msgid ""
":meth:`~Flask.test_request_context` accepts ``subdomain`` and "
"``url_scheme`` arguments for use when building the base URL. (`#1621`_)"
msgstr ""

#: ../../../CHANGES.rst:147
msgid ""
"Set :data:`APPLICATION_ROOT` to ``'/'`` by default. This was already the "
"implicit default when it was set to ``None``."
msgstr ""

#: ../../../CHANGES.rst:149
msgid ""
":data:`TRAP_BAD_REQUEST_ERRORS` is enabled by default in debug mode. "
"``BadRequestKeyError`` has a message with the bad key in debug mode "
"instead of the generic bad request message. (`#2348`_)"
msgstr ""

#: ../../../CHANGES.rst:152
msgid ""
"Allow registering new tags with :class:`~json.tag.TaggedJSONSerializer` "
"to support storing other types in the session cookie. (`#2352`_)"
msgstr ""

#: ../../../CHANGES.rst:155
msgid ""
"Only open the session if the request has not been pushed onto the context"
" stack yet. This allows :func:`~stream_with_context` generators to access"
" the same session that the containing view uses. (`#2354`_)"
msgstr ""

#: ../../../CHANGES.rst:159
msgid ""
"Add ``json`` keyword argument for the test client request methods. This "
"will dump the given object as JSON and set the appropriate content type. "
"(`#2358`_)"
msgstr ""

#: ../../../CHANGES.rst:162
msgid ""
"Extract JSON handling to a mixin applied to both the :class:`Request` and"
" :class:`Response` classes. This adds the :meth:`~Response.is_json` and "
":meth:`~Response.get_json` methods to the response to make testing JSON "
"response much easier. (`#2358`_)"
msgstr ""

#: ../../../CHANGES.rst:166
msgid ""
"Removed error handler caching because it caused unexpected results for "
"some exception inheritance hierarchies. Register handlers explicitly for "
"each exception if you want to avoid traversing the MRO. (`#2362`_)"
msgstr ""

#: ../../../CHANGES.rst:170
msgid "Fix incorrect JSON encoding of aware, non-UTC datetimes. (`#2374`_)"
msgstr ""

#: ../../../CHANGES.rst:171
msgid ""
"Template auto reloading will honor debug mode even even if "
":attr:`~Flask.jinja_env` was already accessed. (`#2373`_)"
msgstr ""

#: ../../../CHANGES.rst:173
msgid "The following old deprecated code was removed. (`#2385`_)"
msgstr ""

#: ../../../CHANGES.rst:175
msgid ""
"``flask.ext`` - import extensions directly by their name instead of "
"through the ``flask.ext`` namespace. For example, ``import "
"flask.ext.sqlalchemy`` becomes ``import flask_sqlalchemy``."
msgstr ""

#: ../../../CHANGES.rst:179
msgid ""
"``Flask.init_jinja_globals`` - extend "
":meth:`Flask.create_jinja_environment` instead."
msgstr ""

#: ../../../CHANGES.rst:181
msgid ""
"``Flask.error_handlers`` - tracked by :attr:`Flask.error_handler_spec`, "
"use :meth:`Flask.errorhandler` to register handlers."
msgstr ""

#: ../../../CHANGES.rst:184
msgid ""
"``Flask.request_globals_class`` - use :attr:`Flask.app_ctx_globals_class`"
" instead."
msgstr ""

#: ../../../CHANGES.rst:186
msgid "``Flask.static_path`` - use :attr:`Flask.static_url_path` instead."
msgstr ""

#: ../../../CHANGES.rst:188
msgid "``Request.module`` - use :attr:`Request.blueprint` instead."
msgstr ""

#: ../../../CHANGES.rst:190
msgid "The :attr:`Request.json` property is no longer deprecated. (`#1421`_)"
msgstr ""

#: ../../../CHANGES.rst:192
msgid ""
"Support passing a :class:`~werkzeug.test.EnvironBuilder` or ``dict`` to "
":meth:`test_client.open <werkzeug.test.Client.open>`. (`#2412`_)"
msgstr ""

#: ../../../CHANGES.rst:195
msgid ""
"The ``flask`` command and :meth:`Flask.run` will load environment "
"variables from ``.env`` and ``.flaskenv`` files if python-dotenv is "
"installed. (`#2416`_)"
msgstr ""

#: ../../../CHANGES.rst:198
msgid ""
"When passing a full URL to the test client, the scheme in the URL is used"
" instead of :data:`PREFERRED_URL_SCHEME`. (`#2430`_)"
msgstr ""

#: ../../../CHANGES.rst:200
msgid ""
":attr:`Flask.logger` has been simplified. ``LOGGER_NAME`` and "
"``LOGGER_HANDLER_POLICY`` config was removed. The logger is always named "
"``flask.app``. The level is only set on first access, it doesn't check "
":attr:`Flask.debug` each time. Only one format is used, not different "
"ones depending on :attr:`Flask.debug`. No handlers are removed, and a "
"handler is only added if no handlers are already configured. (`#2436`_)"
msgstr ""

#: ../../../CHANGES.rst:207
msgid "Blueprint view function names may not contain dots. (`#2450`_)"
msgstr ""

#: ../../../CHANGES.rst:208
msgid ""
"Fix a ``ValueError`` caused by invalid ``Range`` requests in some cases. "
"(`#2526`_)"
msgstr ""

#: ../../../CHANGES.rst:210
msgid "The development server uses threads by default. (`#2529`_)"
msgstr ""

#: ../../../CHANGES.rst:211
msgid ""
"Loading config files with ``silent=True`` will ignore "
":data:`~errno.ENOTDIR` errors. (`#2581`_)"
msgstr ""

#: ../../../CHANGES.rst:213
msgid ""
"Pass ``--cert`` and ``--key`` options to ``flask run`` to run the "
"development server over HTTPS. (`#2606`_)"
msgstr ""

#: ../../../CHANGES.rst:215
msgid ""
"Added :data:`SESSION_COOKIE_SAMESITE` to control the ``SameSite`` "
"attribute on the session cookie. (`#2607`_)"
msgstr ""

#: ../../../CHANGES.rst:217
msgid ""
"Added :meth:`~flask.Flask.test_cli_runner` to create a Click runner that "
"can invoke Flask CLI commands for testing. (`#2636`_)"
msgstr ""

#: ../../../CHANGES.rst:219
msgid ""
"Subdomain matching is disabled by default and setting :data:`SERVER_NAME`"
" does not implicitly enable it. It can be enabled by passing "
"``subdomain_matching=True`` to the ``Flask`` constructor. (`#2635`_)"
msgstr ""

#: ../../../CHANGES.rst:223
msgid ""
"A single trailing slash is stripped from the blueprint ``url_prefix`` "
"when it is registered with the app. (`#2629`_)"
msgstr ""

#: ../../../CHANGES.rst:225
msgid ""
":meth:`Request.get_json` doesn't cache the result if parsing fails when "
"``silent`` is true. (`#2651`_)"
msgstr ""

#: ../../../CHANGES.rst:227
msgid ""
":func:`Request.get_json` no longer accepts arbitrary encodings. Incoming "
"JSON should be encoded using UTF-8 per :rfc:`8259`, but Flask will "
"autodetect UTF-8, -16, or -32. (`#2691`_)"
msgstr ""

#: ../../../CHANGES.rst:230
msgid ""
"Added :data:`MAX_COOKIE_SIZE` and :attr:`Response.max_cookie_size` to "
"control when Werkzeug warns about large cookies that browsers may ignore."
" (`#2693`_)"
msgstr ""

#: ../../../CHANGES.rst:233
msgid ""
"Updated documentation theme to make docs look better in small windows. "
"(`#2709`_)"
msgstr ""

#: ../../../CHANGES.rst:235
msgid ""
"Rewrote the tutorial docs and example project to take a more structured "
"approach to help new users avoid common pitfalls. (`#2676`_)"
msgstr ""

#: ../../../CHANGES.rst:290
msgid "Version 0.12.4"
msgstr ""

#: ../../../CHANGES.rst:292
msgid "Released on April 29 2018"
msgstr ""

#: ../../../CHANGES.rst:294
msgid "Repackage 0.12.3 to fix package layout issue. (`#2728`_)"
msgstr ""

#: ../../../CHANGES.rst:300
msgid "Version 0.12.3"
msgstr ""

#: ../../../CHANGES.rst:304
msgid ""
":func:`Request.get_json` no longer accepts arbitrary encodings. Incoming "
"JSON should be encoded using UTF-8 per :rfc:`8259`, but Flask will "
"autodetect UTF-8, -16, or -32. (`#2692`_)"
msgstr ""

#: ../../../CHANGES.rst:307
msgid ""
"Fix a Python warning about imports when using ``python -m flask``. "
"(`#2666`_)"
msgstr ""

#: ../../../CHANGES.rst:309
msgid "Fix a ``ValueError`` caused by invalid ``Range`` requests in some cases."
msgstr ""

#: ../../../CHANGES.rst:317
msgid "Version 0.12.2"
msgstr ""

#: ../../../CHANGES.rst:319
msgid "Released on May 16 2017"
msgstr ""

#: ../../../CHANGES.rst:321
msgid "Fix a bug in `safe_join` on Windows."
msgstr ""

#: ../../../CHANGES.rst:324
msgid "Version 0.12.1"
msgstr ""

#: ../../../CHANGES.rst:326
msgid "Bugfix release, released on March 31st 2017"
msgstr ""

#: ../../../CHANGES.rst:328
msgid ""
"Prevent `flask run` from showing a NoAppException when an ImportError "
"occurs within the imported application module."
msgstr ""

#: ../../../CHANGES.rst:330
msgid ""
"Fix encoding behavior of ``app.config.from_pyfile`` for Python 3. Fix "
"``#2118``."
msgstr ""

#: ../../../CHANGES.rst:332
msgid ""
"Use the ``SERVER_NAME`` config if it is present as default values for "
"``app.run``. ``#2109``, ``#2152``"
msgstr ""

#: ../../../CHANGES.rst:334
msgid ""
"Call `ctx.auto_pop` with the exception object instead of `None`, in the "
"event that a `BaseException` such as `KeyboardInterrupt` is raised in a "
"request handler."
msgstr ""

#: ../../../CHANGES.rst:339
msgid "Version 0.12"
msgstr ""

#: ../../../CHANGES.rst:341
msgid "Released on December 21st 2016, codename Punsch."
msgstr ""

#: ../../../CHANGES.rst:343
msgid "the cli command now responds to `--version`."
msgstr ""

#: ../../../CHANGES.rst:344
msgid ""
"Mimetype guessing and ETag generation for file-like objects in "
"``send_file`` has been removed, as per issue ``#104``. (`#1849`_)"
msgstr ""

#: ../../../CHANGES.rst:346
msgid ""
"Mimetype guessing in ``send_file`` now fails loudly and doesn't fall back"
" to ``application/octet-stream``. (`#1988`_)"
msgstr ""

#: ../../../CHANGES.rst:348
msgid ""
"Make ``flask.safe_join`` able to join multiple paths like "
"``os.path.join`` (`#1730`_)."
msgstr ""

#: ../../../CHANGES.rst:350
msgid ""
"Revert a behavior change that made the dev server crash instead of "
"returning an Internal Server Error (`#2006`_)."
msgstr ""

#: ../../../CHANGES.rst:352
msgid ""
"Correctly invoke response handlers for both regular request dispatching "
"as well as error handlers."
msgstr ""

#: ../../../CHANGES.rst:354
msgid "Disable logger propagation by default for the app logger."
msgstr ""

#: ../../../CHANGES.rst:355
msgid "Add support for range requests in ``send_file``."
msgstr ""

#: ../../../CHANGES.rst:356
msgid ""
"``app.test_client`` includes preset default environment, which can now be"
" directly set, instead of per ``client.get``."
msgstr ""

#: ../../../CHANGES.rst:365
msgid "Version 0.11.2"
msgstr ""

#: ../../../CHANGES.rst:367
msgid "Bugfix release, unreleased"
msgstr ""

#: ../../../CHANGES.rst:369
msgid "Fix crash when running under PyPy3. (`#1814`_)"
msgstr ""

#: ../../../CHANGES.rst:374
msgid "Version 0.11.1"
msgstr ""

#: ../../../CHANGES.rst:376
msgid "Bugfix release, released on June 7th 2016."
msgstr ""

#: ../../../CHANGES.rst:378
msgid ""
"Fixed a bug that prevented ``FLASK_APP=foobar/__init__.py`` from working."
" (`#1872`_)"
msgstr ""

#: ../../../CHANGES.rst:383
msgid "Version 0.11"
msgstr ""

#: ../../../CHANGES.rst:385
msgid "Released on May 29th 2016, codename Absinthe."
msgstr ""

#: ../../../CHANGES.rst:387
msgid ""
"Added support to serializing top-level arrays to :func:`flask.jsonify`. "
"This introduces a security risk in ancient browsers. See :ref:`json-"
"security` for details."
msgstr ""

#: ../../../CHANGES.rst:390
msgid "Added before_render_template signal."
msgstr ""

#: ../../../CHANGES.rst:391
msgid ""
"Added `**kwargs` to :meth:`flask.Test.test_client` to support passing "
"additional keyword arguments to the constructor of "
":attr:`flask.Flask.test_client_class`."
msgstr ""

#: ../../../CHANGES.rst:394
msgid ""
"Added ``SESSION_REFRESH_EACH_REQUEST`` config key that controls the set-"
"cookie behavior.  If set to ``True`` a permanent session will be "
"refreshed each request and get their lifetime extended, if set to "
"``False`` it will only be modified if the session actually modifies. Non "
"permanent sessions are not affected by this and will always expire if the"
" browser window closes."
msgstr ""

#: ../../../CHANGES.rst:400
msgid "Made Flask support custom JSON mimetypes for incoming data."
msgstr ""

#: ../../../CHANGES.rst:401
msgid ""
"Added support for returning tuples in the form ``(response, headers)`` "
"from a view function."
msgstr ""

#: ../../../CHANGES.rst:403
msgid "Added :meth:`flask.Config.from_json`."
msgstr ""

#: ../../../CHANGES.rst:404
msgid "Added :attr:`flask.Flask.config_class`."
msgstr ""

#: ../../../CHANGES.rst:405
msgid "Added :meth:`flask.Config.get_namespace`."
msgstr ""

#: ../../../CHANGES.rst:406
msgid ""
"Templates are no longer automatically reloaded outside of debug mode. "
"This can be configured with the new ``TEMPLATES_AUTO_RELOAD`` config key."
msgstr ""

#: ../../../CHANGES.rst:408
msgid "Added a workaround for a limitation in Python 3.3's namespace loader."
msgstr ""

#: ../../../CHANGES.rst:409
msgid ""
"Added support for explicit root paths when using Python 3.3's namespace "
"packages."
msgstr ""

#: ../../../CHANGES.rst:411
msgid ""
"Added :command:`flask` and the ``flask.cli`` module to start the local "
"debug server through the click CLI system.  This is recommended over the "
"old ``flask.run()`` method as it works faster and more reliable due to a "
"different design and also replaces ``Flask-Script``."
msgstr ""

#: ../../../CHANGES.rst:415
msgid ""
"Error handlers that match specific classes are now checked first, thereby"
" allowing catching exceptions that are subclasses of HTTP exceptions (in "
"``werkzeug.exceptions``).  This makes it possible for an extension author"
" to create exceptions that will by default result in the HTTP error of "
"their choosing, but may be caught with a custom error handler if desired."
msgstr ""

#: ../../../CHANGES.rst:421
msgid "Added :meth:`flask.Config.from_mapping`."
msgstr ""

#: ../../../CHANGES.rst:422
msgid ""
"Flask will now log by default even if debug is disabled.  The log format "
"is now hardcoded but the default log handling can be disabled through the"
" ``LOGGER_HANDLER_POLICY`` configuration key."
msgstr ""

#: ../../../CHANGES.rst:425
msgid "Removed deprecated module functionality."
msgstr ""

#: ../../../CHANGES.rst:426
msgid ""
"Added the ``EXPLAIN_TEMPLATE_LOADING`` config flag which when enabled "
"will instruct Flask to explain how it locates templates.  This should "
"help users debug when the wrong templates are loaded."
msgstr ""

#: ../../../CHANGES.rst:429
msgid ""
"Enforce blueprint handling in the order they were registered for template"
" loading."
msgstr ""

#: ../../../CHANGES.rst:431
msgid "Ported test suite to py.test."
msgstr ""

#: ../../../CHANGES.rst:432
msgid "Deprecated ``request.json`` in favour of ``request.get_json()``."
msgstr ""

#: ../../../CHANGES.rst:433
msgid ""
"Add \"pretty\" and \"compressed\" separators definitions in jsonify() "
"method. Reduces JSON response size when JSONIFY_PRETTYPRINT_REGULAR=False"
" by removing unnecessary white space included by default after "
"separators."
msgstr ""

#: ../../../CHANGES.rst:436
msgid ""
"JSON responses are now terminated with a newline character, because it is"
" a convention that UNIX text files end with a newline and some clients "
"don't deal well when this newline is missing. See "
"https://github.com/pallets/flask/pull/1262 -- this came up originally as "
"a part of https://github.com/kennethreitz/httpbin/issues/168"
msgstr ""

#: ../../../CHANGES.rst:441
msgid ""
"The automatically provided ``OPTIONS`` method is now correctly disabled "
"if the user registered an overriding rule with the lowercase-version "
"``options`` (issue ``#1288``)."
msgstr ""

#: ../../../CHANGES.rst:444
msgid "``flask.json.jsonify`` now supports the ``datetime.date`` type (`#1326`_)."
msgstr ""

#: ../../../CHANGES.rst:445
msgid ""
"Don't leak exception info of already catched exceptions to context "
"teardown handlers (`#1393`_)."
msgstr ""

#: ../../../CHANGES.rst:447
msgid "Allow custom Jinja environment subclasses (`#1422`_)."
msgstr ""

#: ../../../CHANGES.rst:448
msgid "Updated extension dev guidelines."
msgstr ""

#: ../../../CHANGES.rst:450
msgid "``flask.g`` now has ``pop()`` and ``setdefault`` methods."
msgstr ""

#: ../../../CHANGES.rst:451
msgid ""
"Turn on autoescape for ``flask.templating.render_template_string`` by "
"default (`#1515`_)."
msgstr ""

#: ../../../CHANGES.rst:453
msgid "``flask.ext`` is now deprecated (`#1484`_)."
msgstr ""

#: ../../../CHANGES.rst:454
msgid ""
"``send_from_directory`` now raises BadRequest if the filename is invalid "
"on the server OS (`#1763`_)."
msgstr ""

#: ../../../CHANGES.rst:456
msgid "Added the ``JSONIFY_MIMETYPE`` configuration variable (`#1728`_)."
msgstr ""

#: ../../../CHANGES.rst:457
msgid ""
"Exceptions during teardown handling will no longer leave bad application "
"contexts lingering around."
msgstr ""

#: ../../../CHANGES.rst:469
msgid "Version 0.10.2"
msgstr ""

#: ../../../CHANGES.rst:471
msgid "(bugfix release, release date to be announced)"
msgstr ""

#: ../../../CHANGES.rst:473
msgid "Fixed broken `test_appcontext_signals()` test case."
msgstr ""

#: ../../../CHANGES.rst:474
msgid ""
"Raise an :exc:`AttributeError` in :func:`flask.helpers.find_package` with"
" a useful message explaining why it is raised when a PEP 302 import hook "
"is used without an `is_package()` method."
msgstr ""

#: ../../../CHANGES.rst:477
msgid ""
"Fixed an issue causing exceptions raised before entering a request or app"
" context to be passed to teardown handlers."
msgstr ""

#: ../../../CHANGES.rst:479
msgid ""
"Fixed an issue with query parameters getting removed from requests in the"
" test client when absolute URLs were requested."
msgstr ""

#: ../../../CHANGES.rst:481
msgid "Made `@before_first_request` into a decorator as intended."
msgstr ""

#: ../../../CHANGES.rst:482
msgid "Fixed an etags bug when sending a file streams with a name."
msgstr ""

#: ../../../CHANGES.rst:483
msgid ""
"Fixed `send_from_directory` not expanding to the application root path "
"correctly."
msgstr ""

#: ../../../CHANGES.rst:485
msgid ""
"Changed logic of before first request handlers to flip the flag after "
"invoking.  This will allow some uses that are potentially dangerous but "
"should probably be permitted."
msgstr ""

#: ../../../CHANGES.rst:488
msgid ""
"Fixed Python 3 bug when a handler from `app.url_build_error_handlers` "
"reraises the `BuildError`."
msgstr ""

#: ../../../CHANGES.rst:492
msgid "Version 0.10.1"
msgstr ""

#: ../../../CHANGES.rst:494
msgid "(bugfix release, released on June 14th 2013)"
msgstr ""

#: ../../../CHANGES.rst:496
msgid ""
"Fixed an issue where ``|tojson`` was not quoting single quotes which made"
" the filter not work properly in HTML attributes.  Now it's possible to "
"use that filter in single quoted attributes.  This should make using that"
" filter with angular.js easier."
msgstr ""

#: ../../../CHANGES.rst:500
msgid ""
"Added support for byte strings back to the session system.  This broke "
"compatibility with the common case of people putting binary data for "
"token verification into the session."
msgstr ""

#: ../../../CHANGES.rst:503
msgid ""
"Fixed an issue where registering the same method twice for the same "
"endpoint would trigger an exception incorrectly."
msgstr ""

#: ../../../CHANGES.rst:507
msgid "Version 0.10"
msgstr ""

#: ../../../CHANGES.rst:509
msgid "Released on June 13th 2013, codename Limoncello."
msgstr ""

#: ../../../CHANGES.rst:511
msgid ""
"Changed default cookie serialization format from pickle to JSON to limit "
"the impact an attacker can do if the secret key leaks.  See :ref"
":`upgrading-to-010` for more information."
msgstr ""

#: ../../../CHANGES.rst:514
msgid ""
"Added ``template_test`` methods in addition to the already existing "
"``template_filter`` method family."
msgstr ""

#: ../../../CHANGES.rst:516
msgid ""
"Added ``template_global`` methods in addition to the already existing "
"``template_filter`` method family."
msgstr ""

#: ../../../CHANGES.rst:518
msgid "Set the content-length header for x-sendfile."
msgstr ""

#: ../../../CHANGES.rst:519
msgid "``tojson`` filter now does not escape script blocks in HTML5 parsers."
msgstr ""

#: ../../../CHANGES.rst:520
msgid ""
"``tojson`` used in templates is now safe by default due.  This was "
"allowed due to the different escaping behavior."
msgstr ""

#: ../../../CHANGES.rst:522
msgid ""
"Flask will now raise an error if you attempt to register a new function "
"on an already used endpoint."
msgstr ""

#: ../../../CHANGES.rst:524
msgid ""
"Added wrapper module around simplejson and added default serialization of"
" datetime objects.  This allows much easier customization of how JSON is "
"handled by Flask or any Flask extension."
msgstr ""

#: ../../../CHANGES.rst:527
msgid ""
"Removed deprecated internal ``flask.session`` module alias.  Use "
"``flask.sessions`` instead to get the session module.  This is not to be "
"confused with ``flask.session`` the session proxy."
msgstr ""

#: ../../../CHANGES.rst:530
msgid ""
"Templates can now be rendered without request context.  The behavior is "
"slightly different as the ``request``, ``session`` and ``g`` objects will"
" not be available and blueprint's context processors are not called."
msgstr ""

#: ../../../CHANGES.rst:534
msgid ""
"The config object is now available to the template as a real global and "
"not through a context processor which makes it available even in imported"
" templates by default."
msgstr ""

#: ../../../CHANGES.rst:537
msgid ""
"Added an option to generate non-ascii encoded JSON which should result in"
" less bytes being transmitted over the network.  It's disabled by default"
" to not cause confusion with existing libraries that might expect "
"``flask.json.dumps`` to return bytestrings by default."
msgstr ""

#: ../../../CHANGES.rst:541
msgid ""
"``flask.g`` is now stored on the app context instead of the request "
"context."
msgstr ""

#: ../../../CHANGES.rst:543
msgid ""
"``flask.g`` now gained a ``get()`` method for not erroring out on non "
"existing items."
msgstr ""

#: ../../../CHANGES.rst:545
msgid ""
"``flask.g`` now can be used with the ``in`` operator to see what's "
"defined and it now is iterable and will yield all attributes stored."
msgstr ""

#: ../../../CHANGES.rst:547
msgid ""
"``flask.Flask.request_globals_class`` got renamed to "
"``flask.Flask.app_ctx_globals_class`` which is a better name to what it "
"does since 0.10."
msgstr ""

#: ../../../CHANGES.rst:550
msgid ""
"`request`, `session` and `g` are now also added as proxies to the "
"template context which makes them available in imported templates.  One "
"has to be very careful with those though because usage outside of macros "
"might cause caching."
msgstr ""

#: ../../../CHANGES.rst:554
msgid ""
"Flask will no longer invoke the wrong error handlers if a proxy exception"
" is passed through."
msgstr ""

#: ../../../CHANGES.rst:556
msgid ""
"Added a workaround for chrome's cookies in localhost not working as "
"intended with domain names."
msgstr ""

#: ../../../CHANGES.rst:558
msgid ""
"Changed logic for picking defaults for cookie values from sessions to "
"work better with Google Chrome."
msgstr ""

#: ../../../CHANGES.rst:560
msgid "Added `message_flashed` signal that simplifies flashing testing."
msgstr ""

#: ../../../CHANGES.rst:561
msgid ""
"Added support for copying of request contexts for better working with "
"greenlets."
msgstr ""

#: ../../../CHANGES.rst:563
msgid ""
"Removed custom JSON HTTP exception subclasses.  If you were relying on "
"them you can reintroduce them again yourself trivially.  Using them "
"however is strongly discouraged as the interface was flawed."
msgstr ""

#: ../../../CHANGES.rst:566
msgid ""
"Python requirements changed: requiring Python 2.6 or 2.7 now to prepare "
"for Python 3.3 port."
msgstr ""

#: ../../../CHANGES.rst:568
msgid ""
"Changed how the teardown system is informed about exceptions.  This is "
"now more reliable in case something handles an exception halfway through "
"the error handling process."
msgstr ""

#: ../../../CHANGES.rst:571
msgid ""
"Request context preservation in debug mode now keeps the exception "
"information around which means that teardown handlers are able to "
"distinguish error from success cases."
msgstr ""

#: ../../../CHANGES.rst:574
msgid "Added the ``JSONIFY_PRETTYPRINT_REGULAR`` configuration variable."
msgstr ""

#: ../../../CHANGES.rst:575
msgid ""
"Flask now orders JSON keys by default to not trash HTTP caches due to "
"different hash seeds between different workers."
msgstr ""

#: ../../../CHANGES.rst:577
msgid "Added `appcontext_pushed` and `appcontext_popped` signals."
msgstr ""

#: ../../../CHANGES.rst:578
msgid ""
"The builtin run method now takes the ``SERVER_NAME`` into account when "
"picking the default port to run on."
msgstr ""

#: ../../../CHANGES.rst:580
msgid ""
"Added `flask.request.get_json()` as a replacement for the old "
"`flask.request.json` property."
msgstr ""

#: ../../../CHANGES.rst:584
msgid "Version 0.9"
msgstr ""

#: ../../../CHANGES.rst:586
msgid "Released on July 1st 2012, codename Campari."
msgstr ""

#: ../../../CHANGES.rst:588
msgid ""
"The :func:`flask.Request.on_json_loading_failed` now returns a JSON "
"formatted response by default."
msgstr ""

#: ../../../CHANGES.rst:590
msgid ""
"The :func:`flask.url_for` function now can generate anchors to the "
"generated links."
msgstr ""

#: ../../../CHANGES.rst:592
msgid ""
"The :func:`flask.url_for` function now can also explicitly generate URL "
"rules specific to a given HTTP method."
msgstr ""

#: ../../../CHANGES.rst:594
msgid ""
"Logger now only returns the debug log setting if it was not set "
"explicitly."
msgstr ""

#: ../../../CHANGES.rst:596
msgid ""
"Unregister a circular dependency between the WSGI environment and the "
"request object when shutting down the request.  This means that environ "
"``werkzeug.request`` will be ``None`` after the response was returned to "
"the WSGI server but has the advantage that the garbage collector is not "
"needed on CPython to tear down the request unless the user created "
"circular dependencies themselves."
msgstr ""

#: ../../../CHANGES.rst:602
msgid ""
"Session is now stored after callbacks so that if the session payload is "
"stored in the session you can still modify it in an after request "
"callback."
msgstr ""

#: ../../../CHANGES.rst:605
msgid ""
"The :class:`flask.Flask` class will avoid importing the provided import "
"name if it can (the required first parameter), to benefit tools which "
"build Flask instances programmatically.  The Flask class will fall back "
"to using import on systems with custom module hooks, e.g. Google App "
"Engine, or when the import name is inside a zip archive (usually a .egg) "
"prior to Python 2.7."
msgstr ""

#: ../../../CHANGES.rst:610
msgid ""
"Blueprints now have a decorator to add custom template filters "
"application wide, :meth:`flask.Blueprint.app_template_filter`."
msgstr ""

#: ../../../CHANGES.rst:612
msgid ""
"The Flask and Blueprint classes now have a non-decorator method for "
"adding custom template filters application wide, "
":meth:`flask.Flask.add_template_filter` and "
":meth:`flask.Blueprint.add_app_template_filter`."
msgstr ""

#: ../../../CHANGES.rst:616
msgid ""
"The :func:`flask.get_flashed_messages` function now allows rendering "
"flashed message categories in separate blocks, through a "
"``category_filter`` argument."
msgstr ""

#: ../../../CHANGES.rst:619
msgid ""
"The :meth:`flask.Flask.run` method now accepts ``None`` for `host` and "
"`port` arguments, using default values when ``None``.  This allows for "
"calling run using configuration values, e.g. "
"``app.run(app.config.get('MYHOST'), app.config.get('MYPORT'))``, with "
"proper behavior whether or not a config file is provided."
msgstr ""

#: ../../../CHANGES.rst:624
msgid ""
"The :meth:`flask.render_template` method now accepts a either an iterable"
" of template names or a single template name.  Previously, it only "
"accepted a single template name.  On an iterable, the first template "
"found is rendered."
msgstr ""

#: ../../../CHANGES.rst:627
msgid ""
"Added :meth:`flask.Flask.app_context` which works very similar to the "
"request context but only provides access to the current application.  "
"This also adds support for URL generation without an active request "
"context."
msgstr ""

#: ../../../CHANGES.rst:630
msgid ""
"View functions can now return a tuple with the first instance being an "
"instance of :class:`flask.Response`.  This allows for returning "
"``jsonify(error=\"error msg\"), 400`` from a view function."
msgstr ""

#: ../../../CHANGES.rst:633
msgid ""
":class:`~flask.Flask` and :class:`~flask.Blueprint` now provide a "
":meth:`~flask.Flask.get_send_file_max_age` hook for subclasses to "
"override behavior of serving static files from Flask when using "
":meth:`flask.Flask.send_static_file` (used for the default static file "
"handler) and :func:`~flask.helpers.send_file`.  This hook is provided a "
"filename, which for example allows changing cache controls by file "
"extension. The default max-age for `send_file` and static files can be "
"configured through a new ``SEND_FILE_MAX_AGE_DEFAULT`` configuration "
"variable, which is used in the default `get_send_file_max_age` "
"implementation."
msgstr ""

#: ../../../CHANGES.rst:642
msgid ""
"Fixed an assumption in sessions implementation which could break message "
"flashing on sessions implementations which use external storage."
msgstr ""

#: ../../../CHANGES.rst:644
msgid ""
"Changed the behavior of tuple return values from functions.  They are no "
"longer arguments to the response object, they now have a defined meaning."
msgstr ""

#: ../../../CHANGES.rst:646
msgid ""
"Added :attr:`flask.Flask.request_globals_class` to allow a specific class"
" to be used on creation of the :data:`~flask.g` instance of each request."
msgstr ""

#: ../../../CHANGES.rst:648
msgid ""
"Added `required_methods` attribute to view functions to force-add methods"
" on registration."
msgstr ""

#: ../../../CHANGES.rst:650
msgid "Added :func:`flask.after_this_request`."
msgstr ""

#: ../../../CHANGES.rst:651
msgid ""
"Added :func:`flask.stream_with_context` and the ability to push contexts "
"multiple times without producing unexpected behavior."
msgstr ""

#: ../../../CHANGES.rst:655
msgid "Version 0.8.1"
msgstr ""

#: ../../../CHANGES.rst:657
msgid "Bugfix release, released on July 1st 2012"
msgstr ""

#: ../../../CHANGES.rst:659
msgid ""
"Fixed an issue with the undocumented `flask.session` module to not work "
"properly on Python 2.5.  It should not be used but did cause some "
"problems for package managers."
msgstr ""

#: ../../../CHANGES.rst:664
msgid "Version 0.8"
msgstr ""

#: ../../../CHANGES.rst:666
msgid "Released on September 29th 2011, codename Rakija"
msgstr ""

#: ../../../CHANGES.rst:668
msgid ""
"Refactored session support into a session interface so that the "
"implementation of the sessions can be changed without having to override "
"the Flask class."
msgstr ""

#: ../../../CHANGES.rst:671
msgid "Empty session cookies are now deleted properly automatically."
msgstr ""

#: ../../../CHANGES.rst:672
msgid ""
"View functions can now opt out of getting the automatic OPTIONS "
"implementation."
msgstr ""

#: ../../../CHANGES.rst:674
msgid ""
"HTTP exceptions and Bad Request errors can now be trapped so that they "
"show up normally in the traceback."
msgstr ""

#: ../../../CHANGES.rst:676
msgid ""
"Flask in debug mode is now detecting some common problems and tries to "
"warn you about them."
msgstr ""

#: ../../../CHANGES.rst:678
msgid ""
"Flask in debug mode will now complain with an assertion error if a view "
"was attached after the first request was handled.  This gives earlier "
"feedback when users forget to import view code ahead of time."
msgstr ""

#: ../../../CHANGES.rst:681
msgid ""
"Added the ability to register callbacks that are only triggered once at "
"the beginning of the first request. (:meth:`Flask.before_first_request`)"
msgstr ""

#: ../../../CHANGES.rst:683
msgid ""
"Malformed JSON data will now trigger a bad request HTTP exception instead"
" of a value error which usually would result in a 500 internal server "
"error if not handled.  This is a backwards incompatible change."
msgstr ""

#: ../../../CHANGES.rst:686
msgid ""
"Applications now not only have a root path where the resources and "
"modules are located but also an instance path which is the designated "
"place to drop files that are modified at runtime (uploads etc.).  Also "
"this is conceptually only instance depending and outside version control "
"so it's the perfect place to put configuration files etc.  For more "
"information see :ref:`instance-folders`."
msgstr ""

#: ../../../CHANGES.rst:692
msgid "Added the ``APPLICATION_ROOT`` configuration variable."
msgstr ""

#: ../../../CHANGES.rst:693
msgid ""
"Implemented :meth:`~flask.testing.TestClient.session_transaction` to "
"easily modify sessions from the test environment."
msgstr ""

#: ../../../CHANGES.rst:695
msgid ""
"Refactored test client internally.  The ``APPLICATION_ROOT`` "
"configuration variable as well as ``SERVER_NAME`` are now properly used "
"by the test client as defaults."
msgstr ""

#: ../../../CHANGES.rst:698
msgid ""
"Added :attr:`flask.views.View.decorators` to support simpler decorating "
"of pluggable (class-based) views."
msgstr ""

#: ../../../CHANGES.rst:700
msgid ""
"Fixed an issue where the test client if used with the \"with\" statement "
"did not trigger the execution of the teardown handlers."
msgstr ""

#: ../../../CHANGES.rst:702
msgid "Added finer control over the session cookie parameters."
msgstr ""

#: ../../../CHANGES.rst:703
msgid ""
"HEAD requests to a method view now automatically dispatch to the `get` "
"method if no handler was implemented."
msgstr ""

#: ../../../CHANGES.rst:705
msgid ""
"Implemented the virtual :mod:`flask.ext` package to import extensions "
"from."
msgstr ""

#: ../../../CHANGES.rst:706
msgid ""
"The context preservation on exceptions is now an integral component of "
"Flask itself and no longer of the test client.  This cleaned up some "
"internal logic and lowers the odds of runaway request contexts in "
"unittests."
msgstr ""

#: ../../../CHANGES.rst:711
msgid "Version 0.7.3"
msgstr ""

#: ../../../CHANGES.rst:713
msgid "Bugfix release, release date to be decided"
msgstr ""

#: ../../../CHANGES.rst:715
msgid ""
"Fixed the Jinja2 environment's list_templates method not returning the "
"correct names when blueprints or modules were involved."
msgstr ""

#: ../../../CHANGES.rst:719
msgid "Version 0.7.2"
msgstr ""

#: ../../../CHANGES.rst:721
msgid "Bugfix release, released on July 6th 2011"
msgstr ""

#: ../../../CHANGES.rst:723
msgid "Fixed an issue with URL processors not properly working on blueprints."
msgstr ""

#: ../../../CHANGES.rst:727
msgid "Version 0.7.1"
msgstr ""

#: ../../../CHANGES.rst:729
msgid "Bugfix release, released on June 29th 2011"
msgstr ""

#: ../../../CHANGES.rst:731
msgid "Added missing future import that broke 2.5 compatibility."
msgstr ""

#: ../../../CHANGES.rst:732
msgid "Fixed an infinite redirect issue with blueprints."
msgstr ""

#: ../../../CHANGES.rst:735
msgid "Version 0.7"
msgstr ""

#: ../../../CHANGES.rst:737
msgid "Released on June 28th 2011, codename Grappa"
msgstr ""

#: ../../../CHANGES.rst:739
msgid ""
"Added :meth:`~flask.Flask.make_default_options_response` which can be "
"used by subclasses to alter the default behavior for ``OPTIONS`` "
"responses."
msgstr ""

#: ../../../CHANGES.rst:742
msgid ""
"Unbound locals now raise a proper :exc:`RuntimeError` instead of an "
":exc:`AttributeError`."
msgstr ""

#: ../../../CHANGES.rst:744
msgid ""
"Mimetype guessing and etag support based on file objects is now "
"deprecated for :func:`flask.send_file` because it was unreliable. Pass "
"filenames instead or attach your own etags and provide a proper mimetype "
"by hand."
msgstr ""

#: ../../../CHANGES.rst:748
msgid ""
"Static file handling for modules now requires the name of the static "
"folder to be supplied explicitly.  The previous autodetection was not "
"reliable and caused issues on Google's App Engine.  Until 1.0 the old "
"behavior will continue to work but issue dependency warnings."
msgstr ""

#: ../../../CHANGES.rst:753
msgid "fixed a problem for Flask to run on jython."
msgstr ""

#: ../../../CHANGES.rst:754
msgid ""
"added a ``PROPAGATE_EXCEPTIONS`` configuration variable that can be used "
"to flip the setting of exception propagation which previously was linked "
"to ``DEBUG`` alone and is now linked to either ``DEBUG`` or ``TESTING``."
msgstr ""

#: ../../../CHANGES.rst:758
msgid ""
"Flask no longer internally depends on rules being added through the "
"`add_url_rule` function and can now also accept regular werkzeug rules "
"added to the url map."
msgstr ""

#: ../../../CHANGES.rst:761
msgid ""
"Added an `endpoint` method to the flask application object which allows "
"one to register a callback to an arbitrary endpoint with a decorator."
msgstr ""

#: ../../../CHANGES.rst:764
msgid ""
"Use Last-Modified for static file sending instead of Date which was "
"incorrectly introduced in 0.6."
msgstr ""

#: ../../../CHANGES.rst:766
msgid "Added `create_jinja_loader` to override the loader creation process."
msgstr ""

#: ../../../CHANGES.rst:767
msgid "Implemented a silent flag for `config.from_pyfile`."
msgstr ""

#: ../../../CHANGES.rst:768
msgid ""
"Added `teardown_request` decorator, for functions that should run at the "
"end of a request regardless of whether an exception occurred.  Also the "
"behavior for `after_request` was changed.  It's now no longer executed "
"when an exception is raised.  See :ref:`upgrading-to-new-teardown-"
"handling`"
msgstr ""

#: ../../../CHANGES.rst:772
msgid "Implemented :func:`flask.has_request_context`"
msgstr ""

#: ../../../CHANGES.rst:773
msgid ""
"Deprecated `init_jinja_globals`.  Override the "
":meth:`~flask.Flask.create_jinja_environment` method instead to achieve "
"the same functionality."
msgstr ""

#: ../../../CHANGES.rst:776
msgid "Added :func:`flask.safe_join`"
msgstr ""

#: ../../../CHANGES.rst:777
msgid ""
"The automatic JSON request data unpacking now looks at the charset "
"mimetype parameter."
msgstr ""

#: ../../../CHANGES.rst:779
msgid ""
"Don't modify the session on :func:`flask.get_flashed_messages` if there "
"are no messages in the session."
msgstr ""

#: ../../../CHANGES.rst:781
msgid "`before_request` handlers are now able to abort requests with errors."
msgstr ""

#: ../../../CHANGES.rst:782
msgid ""
"it is not possible to define user exception handlers.  That way you can "
"provide custom error messages from a central hub for certain errors that "
"might occur during request processing (for instance database connection "
"errors, timeouts from remote resources etc.)."
msgstr ""

#: ../../../CHANGES.rst:786
msgid "Blueprints can provide blueprint specific error handlers."
msgstr ""

#: ../../../CHANGES.rst:787
msgid "Implemented generic :ref:`views` (class-based views)."
msgstr ""

#: ../../../CHANGES.rst:790
msgid "Version 0.6.1"
msgstr ""

#: ../../../CHANGES.rst:792
msgid "Bugfix release, released on December 31st 2010"
msgstr ""

#: ../../../CHANGES.rst:794
msgid ""
"Fixed an issue where the default ``OPTIONS`` response was not exposing "
"all valid methods in the ``Allow`` header."
msgstr ""

#: ../../../CHANGES.rst:796
msgid ""
"Jinja2 template loading syntax now allows \"./\" in front of a template "
"load path.  Previously this caused issues with module setups."
msgstr ""

#: ../../../CHANGES.rst:799
msgid ""
"Fixed an issue where the subdomain setting for modules was ignored for "
"the static folder."
msgstr ""

#: ../../../CHANGES.rst:801
msgid ""
"Fixed a security problem that allowed clients to download arbitrary files"
" if the host server was a windows based operating system and the client "
"uses backslashes to escape the directory the files where exposed from."
msgstr ""

#: ../../../CHANGES.rst:806
msgid "Version 0.6"
msgstr ""

#: ../../../CHANGES.rst:808
msgid "Released on July 27th 2010, codename Whisky"
msgstr ""

#: ../../../CHANGES.rst:810
msgid "after request functions are now called in reverse order of registration."
msgstr ""

#: ../../../CHANGES.rst:812
msgid ""
"OPTIONS is now automatically implemented by Flask unless the application "
"explicitly adds 'OPTIONS' as method to the URL rule. In this case no "
"automatic OPTIONS handling kicks in."
msgstr ""

#: ../../../CHANGES.rst:815
msgid ""
"static rules are now even in place if there is no static folder for the "
"module.  This was implemented to aid GAE which will remove the static "
"folder if it's part of a mapping in the .yml file."
msgstr ""

#: ../../../CHANGES.rst:819
msgid ""
"the :attr:`~flask.Flask.config` is now available in the templates as "
"`config`."
msgstr ""

#: ../../../CHANGES.rst:821
msgid ""
"context processors will no longer override values passed directly to the "
"render function."
msgstr ""

#: ../../../CHANGES.rst:823
msgid ""
"added the ability to limit the incoming request data with the new "
"``MAX_CONTENT_LENGTH`` configuration value."
msgstr ""

#: ../../../CHANGES.rst:825
msgid ""
"the endpoint for the :meth:`flask.Module.add_url_rule` method is now "
"optional to be consistent with the function of the same name on the "
"application object."
msgstr ""

#: ../../../CHANGES.rst:828
msgid ""
"added a :func:`flask.make_response` function that simplifies creating "
"response object instances in views."
msgstr ""

#: ../../../CHANGES.rst:830
msgid ""
"added signalling support based on blinker.  This feature is currently "
"optional and supposed to be used by extensions and applications.  If you "
"want to use it, make sure to have `blinker`_ installed."
msgstr ""

#: ../../../CHANGES.rst:833
msgid ""
"refactored the way URL adapters are created.  This process is now fully "
"customizable with the :meth:`~flask.Flask.create_url_adapter` method."
msgstr ""

#: ../../../CHANGES.rst:836
msgid ""
"modules can now register for a subdomain instead of just an URL prefix.  "
"This makes it possible to bind a whole module to a configurable "
"subdomain."
msgstr ""

#: ../../../CHANGES.rst:843
msgid "Version 0.5.2"
msgstr ""

#: ../../../CHANGES.rst:845
msgid "Bugfix Release, released on July 15th 2010"
msgstr ""

#: ../../../CHANGES.rst:847
msgid ""
"fixed another issue with loading templates from directories when modules "
"were used."
msgstr ""

#: ../../../CHANGES.rst:851
msgid "Version 0.5.1"
msgstr ""

#: ../../../CHANGES.rst:853
msgid "Bugfix Release, released on July 6th 2010"
msgstr ""

#: ../../../CHANGES.rst:855
msgid ""
"fixes an issue with template loading from directories when modules where "
"used."
msgstr ""

#: ../../../CHANGES.rst:859
msgid "Version 0.5"
msgstr ""

#: ../../../CHANGES.rst:861
msgid "Released on July 6th 2010, codename Calvados"
msgstr ""

#: ../../../CHANGES.rst:863
msgid ""
"fixed a bug with subdomains that was caused by the inability to specify "
"the server name.  The server name can now be set with the ``SERVER_NAME``"
" config key.  This key is now also used to set the session cookie cross-"
"subdomain wide."
msgstr ""

#: ../../../CHANGES.rst:867
msgid ""
"autoescaping is no longer active for all templates.  Instead it is only "
"active for ``.html``, ``.htm``, ``.xml`` and ``.xhtml``. Inside templates"
" this behavior can be changed with the ``autoescape`` tag."
msgstr ""

#: ../../../CHANGES.rst:871
msgid "refactored Flask internally.  It now consists of more than a single file."
msgstr ""

#: ../../../CHANGES.rst:873
msgid ""
":func:`flask.send_file` now emits etags and has the ability to do "
"conditional responses builtin."
msgstr ""

#: ../../../CHANGES.rst:875
msgid ""
"(temporarily) dropped support for zipped applications.  This was a rarely"
" used feature and led to some confusing behavior."
msgstr ""

#: ../../../CHANGES.rst:877
msgid "added support for per-package template and static-file directories."
msgstr ""

#: ../../../CHANGES.rst:878
msgid ""
"removed support for `create_jinja_loader` which is no longer used in 0.5 "
"due to the improved module support."
msgstr ""

#: ../../../CHANGES.rst:880
msgid "added a helper function to expose files from any directory."
msgstr ""

#: ../../../CHANGES.rst:883
msgid "Version 0.4"
msgstr ""

#: ../../../CHANGES.rst:885
msgid "Released on June 18th 2010, codename Rakia"
msgstr ""

#: ../../../CHANGES.rst:887
msgid ""
"added the ability to register application wide error handlers from "
"modules."
msgstr ""

#: ../../../CHANGES.rst:889
msgid ""
":meth:`~flask.Flask.after_request` handlers are now also invoked if the "
"request dies with an exception and an error handling page kicks in."
msgstr ""

#: ../../../CHANGES.rst:892
msgid ""
"test client has the ability to preserve the request context for a little "
"longer.  This can also be used to trigger custom requests that do not pop"
" the request stack for testing."
msgstr ""

#: ../../../CHANGES.rst:895
msgid ""
"because the Python standard library caches loggers, the name of the "
"logger is configurable now to better support unittests."
msgstr ""

#: ../../../CHANGES.rst:897
msgid "added ``TESTING`` switch that can activate unittesting helpers."
msgstr ""

#: ../../../CHANGES.rst:898
msgid "the logger switches to ``DEBUG`` mode now if debug is enabled."
msgstr ""

#: ../../../CHANGES.rst:901
msgid "Version 0.3.1"
msgstr ""

#: ../../../CHANGES.rst:903
msgid "Bugfix release, released on May 28th 2010"
msgstr ""

#: ../../../CHANGES.rst:905
msgid "fixed a error reporting bug with :meth:`flask.Config.from_envvar`"
msgstr ""

#: ../../../CHANGES.rst:906
msgid "removed some unused code from flask"
msgstr ""

#: ../../../CHANGES.rst:907
msgid ""
"release does no longer include development leftover files (.git folder "
"for themes, built documentation in zip and pdf file and some .pyc files)"
msgstr ""

#: ../../../CHANGES.rst:912
msgid "Version 0.3"
msgstr ""

#: ../../../CHANGES.rst:914
msgid "Released on May 28th 2010, codename Schnaps"
msgstr ""

#: ../../../CHANGES.rst:916
msgid "added support for categories for flashed messages."
msgstr ""

#: ../../../CHANGES.rst:917
msgid ""
"the application now configures a :class:`logging.Handler` and will log "
"request handling exceptions to that logger when not in debug mode.  This "
"makes it possible to receive mails on server errors for example."
msgstr ""

#: ../../../CHANGES.rst:921
msgid ""
"added support for context binding that does not require the use of the "
"with statement for playing in the console."
msgstr ""

#: ../../../CHANGES.rst:923
msgid ""
"the request context is now available within the with statement making it "
"possible to further push the request context or pop it."
msgstr ""

#: ../../../CHANGES.rst:925
msgid "added support for configurations."
msgstr ""

#: ../../../CHANGES.rst:928
msgid "Version 0.2"
msgstr ""

#: ../../../CHANGES.rst:930
msgid "Released on May 12th 2010, codename Jägermeister"
msgstr ""

#: ../../../CHANGES.rst:932
msgid "various bugfixes"
msgstr ""

#: ../../../CHANGES.rst:933
msgid "integrated JSON support"
msgstr ""

#: ../../../CHANGES.rst:934
msgid "added :func:`~flask.get_template_attribute` helper function."
msgstr ""

#: ../../../CHANGES.rst:935
msgid ":meth:`~flask.Flask.add_url_rule` can now also register a view function."
msgstr ""

#: ../../../CHANGES.rst:937
msgid "refactored internal request dispatching."
msgstr ""

#: ../../../CHANGES.rst:938
msgid "server listens on 127.0.0.1 by default now to fix issues with chrome."
msgstr ""

#: ../../../CHANGES.rst:939
msgid "added external URL support."
msgstr ""

#: ../../../CHANGES.rst:940
msgid "added support for :func:`~flask.send_file`"
msgstr ""

#: ../../../CHANGES.rst:941
msgid ""
"module support and internal request handling refactoring to better "
"support pluggable applications."
msgstr ""

#: ../../../CHANGES.rst:943
msgid "sessions can be set to be permanent now on a per-session basis."
msgstr ""

#: ../../../CHANGES.rst:944
msgid "better error reporting on missing secret keys."
msgstr ""

#: ../../../CHANGES.rst:945
msgid "added support for Google Appengine."
msgstr ""

#: ../../../CHANGES.rst:948
msgid "Version 0.1"
msgstr ""

#: ../../../CHANGES.rst:950
msgid "First public preview release."
msgstr ""

